# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    'exec-and-forget /opt/homebrew/opt/borders/bin/borders active_color=0xCFEBBF83 inactive_color=0x33434c5e width=4.0',
    'exec-and-forget sketchybar',
    #    'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
]

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = false
enable-normalization-opposite-orientation-for-nested-containers = false

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto1
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Notify Sketchybar about workspace change
exec-on-workspace-change = [
    '/bin/bash',
    '-c',
    'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]

on-focus-changed = [
    'exec-and-forget sketchybar --trigger aerospace_window_title_change',
]


# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 8
inner.vertical = 8
outer.left = 0
outer.bottom = 0
outer.top = [{ monitor."dell" = 35 }, 0]
outer.right = 0


[workspace-to-monitor-force-assignment]
1 = ['dell', 'built-in']
2 = ['dell', 'built-in']
3 = ['dell', 'built-in']
4 = ['dell', 'built-in']
5 = ['dell', 'built-in']
6 = ['dell', 'built-in']
7 = ['dell', 'built-in']
8 = ['dell', 'built-in']
9 = ['dell', 'built-in']
A = ['dell', 'built-in']
B = ['dell', 'built-in']
C = ['dell', 'built-in']
D = ['dell', 'built-in']
E = ['dell', 'built-in']
F = ['dell', 'built-in']
G = ['dell', 'built-in']
I = ['dell', 'built-in']
M = ['dell', 'built-in']
N = ['dell', 'built-in']
O = ['dell', 'built-in']
P = ['dell', 'built-in']
Q = ['dell', 'built-in']
R = ['dell', 'built-in']
S = ['dell', 'built-in']
Teams = ['dell', 'built-in']
U = ['dell', 'built-in']
V = ['dell', 'built-in']
Web = ['dell', 'built-in']
X = ['dell', 'built-in']
Y = ['dell', 'built-in']
Z = ['dell', 'built-in']
MAC = ['built-in']

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
#                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
#                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
#                   sectionSign (ISO keyboards only, european keyboards only)
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands


alt-cmd-ctrl-s = 'layout v_accordion'               # 'layout stacking' in i3
alt-cmd-ctrl-w = 'layout h_accordion'               # 'layout tabbed' in i3
alt-cmd-ctrl-e = 'layout tiles horizontal vertical' # 'layout toggle split' in i3

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-cmd-ctrl-slash = 'layout tiles horizontal vertical'
alt-cmd-ctrl-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-cmd-ctrl-minus = 'resize smart -50'
alt-cmd-ctrl-equal = 'resize smart +50'


# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-cmd-ctrl-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-cmd-ctrl-shift-z = 'mode service'

alt-cmd-ctrl-z = [
    'mode workspace',
    'exec-and-forget sketchybar --trigger aerospace_mode_change BINDING_MODE=workspace',
]

[mode.workspace.binding]
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
alt-cmd-ctrl-esc = [
    'mode main',
    'exec-and-forget sketchybar --trigger aerospace_mode_change BINDING_MODE=main',
]
alt-cmd-ctrl-shift-esc = ['reload-config', 'mode workspace']


alt-cmd-ctrl-enter = '''exec-and-forget osascript -e '
tell application "Terminal"
    do script
    activate
end tell'
'''


# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-cmd-ctrl-tab = 'workspace-back-and-forth'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-cmd-ctrl-left = 'focus left'
alt-cmd-ctrl-down = 'focus down'
alt-cmd-ctrl-up = 'focus up'
alt-cmd-ctrl-right = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-cmd-ctrl-shift-left = 'move left'
alt-cmd-ctrl-shift-down = 'move down'
alt-cmd-ctrl-shift-up = 'move up'
alt-cmd-ctrl-shift-right = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-cmd-ctrl-1 = 'workspace 1'
alt-cmd-ctrl-2 = 'workspace 2'
alt-cmd-ctrl-3 = 'workspace 3'
alt-cmd-ctrl-4 = 'workspace 4'
alt-cmd-ctrl-5 = 'workspace 5'
alt-cmd-ctrl-6 = 'workspace 6'
alt-cmd-ctrl-7 = 'workspace 7'
alt-cmd-ctrl-8 = 'workspace 8'
alt-cmd-ctrl-9 = 'workspace 9'
alt-cmd-ctrl-a = 'workspace A'
alt-cmd-ctrl-b = 'workspace B'
alt-cmd-ctrl-c = 'workspace C'
alt-cmd-ctrl-d = 'workspace D'
alt-cmd-ctrl-e = 'workspace E'
alt-cmd-ctrl-f = 'workspace F'
alt-cmd-ctrl-g = 'workspace G'
alt-cmd-ctrl-h = 'workspace H'
alt-cmd-ctrl-i = 'workspace I'
alt-cmd-ctrl-m = 'workspace M'
alt-cmd-ctrl-n = 'workspace N'
alt-cmd-ctrl-o = 'workspace O'
alt-cmd-ctrl-p = 'workspace P'
alt-cmd-ctrl-q = 'workspace Q'
alt-cmd-ctrl-r = 'workspace R'
alt-cmd-ctrl-s = 'workspace S'
alt-cmd-ctrl-t = 'workspace Teams'
alt-cmd-ctrl-u = 'workspace U'
alt-cmd-ctrl-v = 'workspace V'
alt-cmd-ctrl-w = 'workspace Web'
alt-cmd-ctrl-z = 'workspace Z'
alt-cmd-ctrl-x = 'workspace X'
alt-cmd-ctrl-y = 'workspace Y'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-cmd-ctrl-shift-1 = ['move-node-to-workspace 1', 'workspace 1']
alt-cmd-ctrl-shift-2 = ['move-node-to-workspace 2', 'workspace 2']
alt-cmd-ctrl-shift-3 = ['move-node-to-workspace 3', 'workspace 3']
alt-cmd-ctrl-shift-4 = ['move-node-to-workspace 4', 'workspace 4']
alt-cmd-ctrl-shift-5 = ['move-node-to-workspace 5', 'workspace 5']
alt-cmd-ctrl-shift-6 = ['move-node-to-workspace 6', 'workspace 6']
alt-cmd-ctrl-shift-7 = ['move-node-to-workspace 7', 'workspace 7']
alt-cmd-ctrl-shift-8 = ['move-node-to-workspace 8', 'workspace 8']
alt-cmd-ctrl-shift-9 = ['move-node-to-workspace 9', 'workspace 9']
alt-cmd-ctrl-shift-a = ['move-node-to-workspace A', 'workspace A']
alt-cmd-ctrl-shift-b = ['move-node-to-workspace B', 'workspace B']
alt-cmd-ctrl-shift-c = ['move-node-to-workspace C', 'workspace C']
alt-cmd-ctrl-shift-d = ['move-node-to-workspace D', 'workspace D']
alt-cmd-ctrl-shift-e = ['move-node-to-workspace E', 'workspace E']
alt-cmd-ctrl-shift-f = ['move-node-to-workspace F', 'workspace F']
alt-cmd-ctrl-shift-g = ['move-node-to-workspace G', 'workspace G']
alt-cmd-ctrl-shift-h = ['move-node-to-workspace G', 'workspace H']
alt-cmd-ctrl-shift-i = ['move-node-to-workspace I', 'workspace I']
alt-cmd-ctrl-shift-m = ['move-node-to-workspace M', 'workspace M']
alt-cmd-ctrl-shift-n = ['move-node-to-workspace N', 'workspace N']
alt-cmd-ctrl-shift-o = ['move-node-to-workspace O', 'workspace O']
alt-cmd-ctrl-shift-p = ['move-node-to-workspace P', 'workspace P']
alt-cmd-ctrl-shift-q = ['move-node-to-workspace Q', 'workspace Q']
alt-cmd-ctrl-shift-r = ['move-node-to-workspace R', 'workspace R']
alt-cmd-ctrl-shift-s = ['move-node-to-workspace S', 'workspace S']
alt-cmd-ctrl-shift-t = ['move-node-to-workspace Teams', 'workspace Teams']
alt-cmd-ctrl-shift-u = ['move-node-to-workspace U', 'workspace U']
alt-cmd-ctrl-shift-v = ['move-node-to-workspace V', 'workspace V']
alt-cmd-ctrl-shift-w = ['move-node-to-workspace Web', 'workspace Web']
alt-cmd-ctrl-shift-z = ['move-node-to-workspace Z', 'workspace Z']
alt-cmd-ctrl-shift-x = ['move-node-to-workspace X', 'workspace X']
alt-cmd-ctrl-shift-y = ['move-node-to-workspace Y', 'workspace Y']

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
    'layout floating tiling',
    'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

down = 'volume down'
up = 'volume up'
shift-down = ['volume set 0', 'mode main']

[[on-window-detected]]
#if.app-id = 'com.microsoft.teams'
if.app-name-regex-substring = 'Teams'
#if.window-title-regex-substring = 'Teams'
#check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace Teams']

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = 'move-node-to-workspace Web'

[[on-window-detected]]
    if.window-title-regex-substring = 'configs'
    run = 'move-node-to-workspace V'

